{"version":3,"sources":["../../src/lib/Request.ts"],"sourcesContent":["import Dispatcher, { HttpMethod } from \"undici/types/dispatcher\";\r\nimport undici from \"undici\";\r\nimport path from \"path\";\r\n\r\nconst defaultRedirectCount = 21;\r\nconst seconds = 1000;\r\n\r\nexport type UndiciOptions = Partial<\r\n    { dispatcher?: Dispatcher } & Omit<Dispatcher.RequestOptions, \"origin\" | \"path\" | \"method\"> &\r\n        Partial<Pick<Dispatcher.RequestOptions, \"method\">>\r\n>;\r\n\r\nexport class Request {\r\n    private url: URL;\r\n    private httpMethod: HttpMethod = \"GET\";\r\n    private data: Record<string, string> | string | null = null;\r\n    private sendDataAs: string | null = null;\r\n    private ua = `request/1.1.9 Node.js/${process.version.slice(1)} (+https://nodejs.org)`;\r\n\r\n    private reqHeaders: Record<string, string> = {};\r\n    private coreOptions: UndiciOptions = {};\r\n\r\n    private timeoutDuration: number = 30 * seconds;\r\n    private redirectCount: number = defaultRedirectCount;\r\n    constructor(url: URL | string) {\r\n        try {\r\n            this.url = url instanceof URL ? url : typeof url === \"string\" ? new URL(url) : new URL(url);\r\n        } catch (error) {\r\n            throw new TypeError(\"Only absolute URLs are supported\");\r\n        }\r\n    }\r\n\r\n    // OPTIONS\r\n\r\n    query(a1: Record<string, string> | string, a2?: string) {\r\n        if (typeof a1 === \"object\") {\r\n            Object.keys(a1).forEach((queryKey) => {\r\n                this.url.searchParams.append(queryKey, a1[queryKey]);\r\n            });\r\n        } else this.url.searchParams.append(a1, String(a2));\r\n\r\n        return this;\r\n    }\r\n\r\n    path(...relativePaths: string[]) {\r\n        for (const relativePath of relativePaths) this.url.pathname = path.join(this.url.pathname, relativePath);\r\n\r\n        return this;\r\n    }\r\n\r\n    body(data: Record<string, string> | string | URLSearchParams, sendAs?: string) {\r\n        if (data instanceof URLSearchParams) this.sendDataAs = \"form\";\r\n        else\r\n            this.sendDataAs =\r\n                typeof data === \"object\" && !sendAs && !Buffer.isBuffer(data) ? \"json\" : sendAs ? sendAs.toLowerCase() : \"buffer\";\r\n\r\n        if (data instanceof URLSearchParams) this.data = new URLSearchParams(data).toString();\r\n        else if (this.sendDataAs === \"form\" && typeof data === \"object\") this.data = new URLSearchParams(data).toString();\r\n        else if (this.sendDataAs === \"json\") this.data = JSON.stringify(data);\r\n        else this.data = data;\r\n\r\n        return this;\r\n    }\r\n\r\n    header(a1: Record<string, string> | string, a2?: string) {\r\n        if (typeof a1 === \"object\") {\r\n            Object.keys(a1).forEach((headerName) => {\r\n                this.reqHeaders[headerName.toLowerCase()] = a1[headerName];\r\n            });\r\n        } else this.reqHeaders[a1.toLowerCase()] = String(a2);\r\n\r\n        return this;\r\n    }\r\n\r\n    timeout(timeout: number) {\r\n        this.timeoutDuration = timeout * seconds;\r\n\r\n        return this;\r\n    }\r\n\r\n    agent(...fragments: any[]) {\r\n        this.ua = fragments.join(\" \");\r\n\r\n        return this;\r\n    }\r\n\r\n    options(a1: Record<string, string> | string, a2?: string) {\r\n        if (typeof a1 === \"object\") {\r\n            Object.keys(a1).forEach((option) => {\r\n                this.coreOptions[option] = a1[option];\r\n            });\r\n        } else this.coreOptions[a1] = a2;\r\n\r\n        return this;\r\n    }\r\n\r\n    auth(token: string, type = \"Bearer\") {\r\n        this.reqHeaders[\"authorization\"] = type ? `${type} ${token}` : token;\r\n\r\n        return this;\r\n    }\r\n\r\n    follow(countOrBool: boolean | number) {\r\n        if (typeof countOrBool === \"number\") this.redirectCount = countOrBool;\r\n        else if (typeof countOrBool === \"boolean\")\r\n            if (countOrBool) this.redirectCount = defaultRedirectCount;\r\n            else this.redirectCount = 0;\r\n\r\n        return this;\r\n    }\r\n\r\n    // HTTP METHODS\r\n\r\n    method(method: HttpMethod) {\r\n        this.httpMethod = method;\r\n\r\n        return this;\r\n    }\r\n\r\n    get() {\r\n        return this.method(\"GET\");\r\n    }\r\n\r\n    post() {\r\n        return this.method(\"POST\");\r\n    }\r\n\r\n    patch() {\r\n        return this.method(\"PATCH\");\r\n    }\r\n\r\n    put() {\r\n        return this.method(\"PUT\");\r\n    }\r\n\r\n    delete() {\r\n        return this.method(\"DELETE\");\r\n    }\r\n\r\n    // RESPONSE MODIFIERS\r\n\r\n    json<T = any>(): Promise<T> {\r\n        return this.send().then((res) => res.body.json());\r\n    }\r\n\r\n    raw(): Promise<ArrayBuffer> {\r\n        return this.send().then((res) => res.body.arrayBuffer().then(Buffer.from));\r\n    }\r\n\r\n    text(): Promise<string> {\r\n        return this.send().then((res) => res.body.text());\r\n    }\r\n\r\n    private send(): Promise<Dispatcher.ResponseData> {\r\n        if (this.data) {\r\n            if (!this.reqHeaders.hasOwnProperty(\"content-type\")) {\r\n                if (this.sendDataAs === \"json\") this.reqHeaders[\"content-type\"] = \"application/json\";\r\n                else if (this.sendDataAs === \"form\") this.reqHeaders[\"content-type\"] = \"application/x-www-form-urlencoded\";\r\n            }\r\n        }\r\n\r\n        this.header(\"user-agent\", this.ua);\r\n\r\n        const req = undici.request(this.url, {\r\n            // @ts-ignore\r\n            body: this.data,\r\n            method: this.httpMethod,\r\n            headers: this.reqHeaders,\r\n            bodyTimeout: this.timeoutDuration,\r\n            maxRedirections: this.redirectCount,\r\n            ...this.coreOptions,\r\n        });\r\n\r\n        return req;\r\n    }\r\n\r\n    then(...args: any[]) {\r\n        return this.send().then(...args);\r\n    }\r\n\r\n    catch(...args: any[]) {\r\n        return this.send().catch(...args);\r\n    }\r\n}\r\nfunction request(url: URL | string) {\r\n    return new Request(url);\r\n}\r\nexport { request };\r\n"],"mappings":"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","names":["path","undici"]}